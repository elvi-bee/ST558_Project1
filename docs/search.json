[
  {
    "objectID": "ST558_Project1.html",
    "href": "ST558_Project1.html",
    "title": "ST 558 Project 1",
    "section": "",
    "text": "Add text"
  },
  {
    "objectID": "ST558_Project1.html#objectives",
    "href": "ST558_Project1.html#objectives",
    "title": "ST 558 Project 1",
    "section": "",
    "text": "Add text"
  },
  {
    "objectID": "ST558_Project1.html#data",
    "href": "ST558_Project1.html#data",
    "title": "ST 558 Project 1",
    "section": "Data",
    "text": "Data\nAdd text"
  },
  {
    "objectID": "ST558_Project1.html#api-call",
    "href": "ST558_Project1.html#api-call",
    "title": "ST 558 Project 1",
    "section": "API Call",
    "text": "API Call\nSteps: - build URL - use httr:GET() to contact website - parse the JSON data using the fromJSON function from the jsonlite package. This reads JSON data from file path or character string and converts and simplifies to R object. - add data to a tibble\n\n# load libraries\nlibrary(jsonlite)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n#first attempt at API call - feel free to change\nURL_ids &lt;- \"api.census.gov/data/2023/acs/acs5/pums?get=SEX,PWGTP,MAR&for=state:1&SCHL=24\"\nid_info &lt;- httr::GET(URL_ids)\n#str(id_info)\n\n\nparsed &lt;-fromJSON(rawToChar(id_info$content))\nPUMS20235Y &lt;- as_tibble(parsed[-1, ], .name_repair = ~ parsed[1, ])\nPUMS20235Y\n\n# A tibble: 2,248 × 5\n   SEX   PWGTP MAR   SCHL  state\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 2     4     3     24    01   \n 2 1     20    1     24    01   \n 3 2     4     1     24    01   \n 4 1     27    1     24    01   \n 5 1     26    1     24    01   \n 6 1     14    1     24    01   \n 7 1     3     5     24    01   \n 8 1     11    1     24    01   \n 9 1     73    1     24    01   \n10 2     9     1     24    01   \n# ℹ 2,238 more rows"
  },
  {
    "objectID": "ST558_Project1.html#functions",
    "href": "ST558_Project1.html#functions",
    "title": "ST 558 Project 1",
    "section": "Functions",
    "text": "Functions\n\nHelper function to take what is returned by GET() and turn it into a tibble\n\n  URL_ids &lt;- \"api.census.gov/data/2023/acs/acs5/pums?get=SEX,PWGTP,MAR&for=state:1&SCHL=24\"\n  id_info &lt;- httr::GET(URL_ids)\n\ncreate_tibble_helper &lt;- function(id_info) {\n  parsed &lt;-fromJSON(rawToChar(id_info$content))\n  return(as_tibble(parsed[-1, ], .name_repair = ~ parsed[1, ]))\n  \n}\n\ncreate_tibble_helper(id_info)\n\n# A tibble: 2,248 × 5\n   SEX   PWGTP MAR   SCHL  state\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 2     15    1     24    01   \n 2 1     43    1     24    01   \n 3 1     8     1     24    01   \n 4 1     3     1     24    01   \n 5 1     18    1     24    01   \n 6 1     13    1     24    01   \n 7 2     3     1     24    01   \n 8 1     27    1     24    01   \n 9 1     38    1     24    01   \n10 2     8     1     24    01   \n# ℹ 2,238 more rows\n\n\n\n\nAPI Date (choose year) function\nA function to query the API that allows the user to change the following items: – Year of survey (2022 as default). Only a single value here - Check that a valid value was given (number between 2010 and 2022)\n\n# function that builds API URL with user input for year\n  \nAPI_URL_builder &lt;- function(year = 2022){\n  #code that takes user inputs and concatenates them into a string that becomes the URL, year must be between 2010 - 2022 and cannot be a decimal\n  if ( year &lt; 2010 | year &gt; 2022 | year %% 1 != 0){\n     stop(\"Please enter a valid year between 2010 and 2022.\")\n     return(NA)\n   }\n  \n  API_URL &lt;- paste0(\"https://api.census.gov/data/\", year, \"/acs/acs1/pums?get=SEX,PWGTP,MAR&for=state:1\" )\n  return(API_URL)\n  \n}\n  \nAPI_URL_builder(2015)\n\n[1] \"https://api.census.gov/data/2015/acs/acs1/pums?get=SEX,PWGTP,MAR&for=state:1\"\n\n\n\n\nAPI Numeric Variables functionality\n\nBy default, return (1) AGEP (age) and PWGTP (weight).\nPWGTP must always be returned _ User options: AGEP, GASP, GRPIP, JWAP (time), JWDP (time), and JWMNP\nThe function should turn variables into numeric values or time values (use the middle of the time period) where appropriate.\nOne numeric variable other than PWGTP must be returned DOES AGEP COUNT HERE? see note in code below\n\n\n# function that builds API URL with user input for numeric variables\n\n\nAPI_Year_NumericVar_Builder &lt;- function(year = 2022, numvars = \"AGEP\"){\n      if ( year &lt; 2010 | year &gt; 2022 | year %% 1 != 0){\n     stop(\"Please enter a valid year between 2010 and 2022.\")\n     #return(NA)\n   }\n      numvar_options &lt;- c(\"AGEP\",\"GASP\",\"GRPIP\",\"JWAP\",\"JWDP\",\"JWMNP\")\n      \n      #make sure all user choices are in allowed list of options\n      if (!all(numvars %in% numvar_options)) \n        stop(\"Please enter a valid numeric variable.\")\n  \n      #Note to self: I'm not sure if this is needed because AGEP is default. does AGEP suffice as the required numeric variable?\n      if (length(numvars) &lt; 1) \n        stop(\"Include at least one numeric variable besides PWGTP.\")\n\n      numvars_comb &lt;- paste(numvars, collapse = \",\")\n      \n      \n  #numvars = c(\"AGEP\", \"GASP\", \"GRPIP\", \"JWAP\", \"JWDP\", \"JWMNP\")\n  API_URL &lt;- paste0(\"https://api.census.gov/data/\", year, \"/acs/acs1/pums?get=PWGTP,\",numvars_comb,\"&for=state:1\" )\n\n  return(API_URL)\n  \n}\n# I can only get the call below to work when I enter the variables as a combined vector.\n#API_Year_NumericVar_Builder(2015, numvars = c(\"GASP\",\"JWAP\",\"GRPIP\",\"JWMNP\"))\nAPI_Year_NumericVar_Builder(2016)\n\n[1] \"https://api.census.gov/data/2016/acs/acs1/pums?get=PWGTP,AGEP&for=state:1\""
  },
  {
    "objectID": "ST558_Project1.html#investigation-using-function",
    "href": "ST558_Project1.html#investigation-using-function",
    "title": "ST 558 Project 1",
    "section": "Investigation using function",
    "text": "Investigation using function"
  },
  {
    "objectID": "ST558_Project1.html#summary",
    "href": "ST558_Project1.html#summary",
    "title": "ST 558 Project 1",
    "section": "Summary",
    "text": "Summary"
  }
]