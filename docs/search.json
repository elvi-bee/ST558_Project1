[
  {
    "objectID": "ST558_Project1.html",
    "href": "ST558_Project1.html",
    "title": "ST 558 Project 1",
    "section": "",
    "text": "Add text"
  },
  {
    "objectID": "ST558_Project1.html#objectives",
    "href": "ST558_Project1.html#objectives",
    "title": "ST 558 Project 1",
    "section": "",
    "text": "Add text"
  },
  {
    "objectID": "ST558_Project1.html#data",
    "href": "ST558_Project1.html#data",
    "title": "ST 558 Project 1",
    "section": "Data",
    "text": "Data\nAdd text"
  },
  {
    "objectID": "ST558_Project1.html#api-call",
    "href": "ST558_Project1.html#api-call",
    "title": "ST 558 Project 1",
    "section": "API Call",
    "text": "API Call\nSteps: - build URL - use httr:GET() to contact website - parse the JSON data using the fromJSON function from the jsonlite package. This reads JSON data from file path or character string and converts and simplifies to R object. - add data to a tibble\n\n# load libraries\nlibrary(jsonlite)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n#first attempt at API call - feel free to change\nURL_ids &lt;- \"api.census.gov/data/2023/acs/acs5/pums?get=SEX,PWGTP,MAR&for=state:1&SCHL=24\"\nid_info &lt;- httr::GET(URL_ids)\n#str(id_info)\n\n\nparsed &lt;-fromJSON(rawToChar(id_info$content))\nPUMS20235Y &lt;- as_tibble(parsed[-1, ], .name_repair = ~ parsed[1, ])\nPUMS20235Y\n\n# A tibble: 2,248 × 5\n   SEX   PWGTP MAR   SCHL  state\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 2     15    1     24    01   \n 2 1     43    1     24    01   \n 3 1     8     1     24    01   \n 4 1     3     1     24    01   \n 5 1     18    1     24    01   \n 6 1     13    1     24    01   \n 7 2     3     1     24    01   \n 8 1     27    1     24    01   \n 9 1     38    1     24    01   \n10 2     8     1     24    01   \n# ℹ 2,238 more rows"
  },
  {
    "objectID": "ST558_Project1.html#functions",
    "href": "ST558_Project1.html#functions",
    "title": "ST 558 Project 1",
    "section": "Functions",
    "text": "Functions\nHelper function to take what is returned by GET() and turn it into a tibble\n\n  URL_ids &lt;- \"api.census.gov/data/2023/acs/acs5/pums?get=SEX,PWGTP,MAR&for=state:1&SCHL=24\"\n  id_info &lt;- httr::GET(URL_ids)\n\ncreate_tibble_helper &lt;- function(id_info) {\n  parsed &lt;-fromJSON(rawToChar(id_info$content))\n  return(as_tibble(parsed[-1, ], .name_repair = ~ parsed[1, ]))\n  \n}\n\ncreate_tibble_helper(id_info)\n\n# A tibble: 2,248 × 5\n   SEX   PWGTP MAR   SCHL  state\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1 1     16    2     24    01   \n 2 2     6     3     24    01   \n 3 1     6     2     24    01   \n 4 1     12    2     24    01   \n 5 1     14    2     24    01   \n 6 1     14    2     24    01   \n 7 2     16    3     24    01   \n 8 2     37    1     24    01   \n 9 1     11    1     24    01   \n10 2     8     1     24    01   \n# ℹ 2,238 more rows"
  },
  {
    "objectID": "ST558_Project1.html#investigation-using-function",
    "href": "ST558_Project1.html#investigation-using-function",
    "title": "ST 558 Project 1",
    "section": "Investigation using function",
    "text": "Investigation using function"
  },
  {
    "objectID": "ST558_Project1.html#summary",
    "href": "ST558_Project1.html#summary",
    "title": "ST 558 Project 1",
    "section": "Summary",
    "text": "Summary"
  }
]